{"version":3,"sources":["App.js","index.js"],"names":["App","useState","list","setList","text","id","message","setMessage","isediting","edittext","setEdittext","type","name","value","onChange","e","target","onClick","preventDefault","newTodoss","map","eachitem","newTodo","Date","getTime","toString","editingitem","find","edittexthandler","newTodos","filter","deletehandler","rootElement","document","getElementById","createRoot","render"],"mappings":"iLA2GeA,EAxGH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,CACrCG,KAAM,GACNC,GAAI,KAFN,mBAAOC,EAAP,KAAgBC,EAAhB,KAIA,EAAgCN,mBAAS,CACvCI,GAAI,GACJG,WAAW,IAFb,mBAAOC,EAAP,KAAiBC,EAAjB,KA+DA,OACE,mCACE,iCACE,uBACEC,KAAK,OACLC,KAAK,OACLC,MAAOP,EAAQF,KACfU,SAlEe,SAACC,GACtBR,EAAW,2BACND,GADK,IAERF,KAAMW,EAAEC,OAAOH,QAElB,IA+DMJ,EAASD,UACR,wBAAQG,KAAK,SAASM,QAhCJ,SAACF,GACzBA,EAAEG,iBACF,IAAIC,EAAYjB,EAAKkB,KAAI,SAACC,GACxB,OAAIA,EAAShB,KAAOI,EAASJ,GACpB,CACLD,KAAME,EAAQF,KACdC,GAAII,EAASJ,IAGRgB,CAEV,IACDlB,EAAQgB,GACRZ,EAAW,CACTH,KAAM,GACNC,GAAI,KAENK,EAAY,CACVF,WAAW,EACXH,GAAI,IAEP,EAWO,kBAIA,wBAAQM,KAAK,SAASM,QAnER,SAACF,GACrBA,EAAEG,iBACF,IAAII,EAAU,CACZlB,KAAME,EAAQF,KACdC,IAAI,IAAIkB,MAAOC,UAAUC,YAG3BtB,EAAQ,GAAD,mBAAKD,GAAL,CAAWoB,KAClBf,EAAW,CACTH,KAAM,GACNC,GAAI,IAEP,EAuDO,oBAKJ,uBACA,6BACGH,EAAKkB,KAAI,SAACC,GACT,IAAQjB,EAAaiB,EAAbjB,KAAMC,EAAOgB,EAAPhB,GACd,OACE,+BACE,+BAAOD,IACP,wBAAQa,QAAS,kBA5DL,SAACZ,GACvBK,EAAY,CACVF,WAAW,EACXH,GAAIA,IAEN,IAAIqB,EAAcxB,EAAKyB,MAAK,SAACN,GAAD,OAAcA,EAAShB,KAAOA,CAA9B,IAC5BE,EAAW,2BACND,GADK,IAERF,KAAMsB,EAAYtB,KAClBC,GAAIqB,EAAYrB,KAEnB,CAiDkCuB,CAAgBvB,EAAtB,EAAjB,kBACA,wBAAQY,QAAS,kBAnEP,SAACZ,GACrB,IAAIwB,EAAW3B,EAAK4B,QAAO,SAACT,GAC1B,OAAOA,EAAShB,KAAOA,CACxB,IACDF,EAAQ0B,EACT,CA8DkCE,CAAc1B,EAApB,EAAjB,sBAHOA,EAMZ,QAIR,ECrGK2B,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,EAAD,M","file":"static/js/main.c905a990.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const [list, setList] = useState([]);\n  const [message, setMessage] = useState({\n    text: \"\",\n    id: \"\"\n  });\n  const [edittext, setEdittext] = useState({\n    id: \"\",\n    isediting: false\n  });\n  const messagehandler = (e) => {\n    setMessage({\n      ...message,\n      text: e.target.value\n    });\n  };\n  const submithandler = (e) => {\n    e.preventDefault();\n    let newTodo = {\n      text: message.text,\n      id: new Date().getTime().toString()\n    };\n\n    setList([...list, newTodo]);\n    setMessage({\n      text: \"\",\n      id: \"\"\n    });\n  };\n  const deletehandler = (id) => {\n    let newTodos = list.filter((eachitem) => {\n      return eachitem.id !== id;\n    });\n    setList(newTodos);\n  };\n  const edittexthandler = (id) => {\n    setEdittext({\n      isediting: true,\n      id: id\n    });\n    let editingitem = list.find((eachitem) => eachitem.id === id);\n    setMessage({\n      ...message,\n      text: editingitem.text,\n      id: editingitem.id\n    });\n  };\n  const submitedithandler = (e) => {\n    e.preventDefault();\n    let newTodoss = list.map((eachitem) => {\n      if (eachitem.id === edittext.id) {\n        return {\n          text: message.text,\n          id: edittext.id\n        };\n      } else {\n        return eachitem;\n      }\n    });\n    setList(newTodoss);\n    setMessage({\n      text: \"\",\n      id: \"\"\n    });\n    setEdittext({\n      isediting: false,\n      id: \"\"\n    });\n  };\n  return (\n    <center>\n      <form>\n        <input\n          type=\"text\"\n          name=\"text\"\n          value={message.text}\n          onChange={messagehandler}\n        />\n        {edittext.isediting ? (\n          <button type=\"submit\" onClick={submitedithandler}>\n            Edit\n          </button>\n        ) : (\n          <button type=\"submit\" onClick={submithandler}>\n            Add\n          </button>\n        )}\n      </form>\n      <hr></hr>\n      <ul>\n        {list.map((eachitem) => {\n          const { text, id } = eachitem;\n          return (\n            <li key={id}>\n              <span>{text}</span>\n              <button onClick={() => edittexthandler(id)}>Edit</button>\n              <button onClick={() => deletehandler(id)}>Delete</button>\n            </li>\n          );\n        })}\n      </ul>\n    </center>\n  );\n};\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}